from pptx.oxml import parse_xml
from pptx.oxml.ns import nsdecls
from pptx.dml.color import RGBColor

def set_cell_border(cell, color=RGBColor(0, 0, 0), border_width=12700):
    """
    Sets borders for a given cell in a table.

    Parameters:
    cell (Cell): The table cell to which borders will be applied.
    color (RGBColor): The color of the border (default is black).
    border_width (int): The width of the border in EMUs (default is 12700 = 1pt).
    
    Returns:
    None: Modifies the cell's borders in place.
    """
    # Define the border XML structure
    border_xml = (
        f'<a:lnW w="{border_width}">'
        f'  <a:solidFill>'
        f'    <a:srgbClr val="{color.rgb_hex[2:]}" />'  # Apply color in hex without the '#'
        f'  </a:solidFill>'
        f'  <a:prstDash val="solid"/>'
        f'</a:lnW>'
    )

    # Add the border to each side of the cell
    cell_top = parse_xml(f'<a:tcPr {nsdecls("a")}>{border_xml}</a:tcPr>')
    cell._element.get_or_add_tcPr().append(cell_top)

def add_table_borders(table):
    """
    Adds borders to all cells in a table.
    
    Parameters:
    table (Table): The table object where borders will be added to all cells.
    
    Returns:
    None: Modifies the table's cells in place.
    """
    # Iterate through all rows and columns in the table
    for row in table.rows:
        for cell in row.cells:
            set_cell_border(cell)

# Example usage:
table_shape = slide.shapes[-1]  # Assuming the table is the last shape added
table = table_shape.table  # Access the table object

# Apply borders to all cells in the table
add_table_borders(table)
