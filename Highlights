import openpyxl
from openpyxl.styles import PatternFill
import tkinter as tk
from tkinter import filedialog, messagebox

# Function to find the highest number for each "Caption" and highlight it
def highlight_highest_number(file_path):
    try:
        # Load the Excel file
        wb = openpyxl.load_workbook(file_path)
        sheet = wb.active

        # Define the columns (update these if your columns are in different positions)
        caption_col = 'A'  # "Caption" column
        memory_col = 'B'   # "MaxMemoryUsedIn (%)" column
        highlight_fill = PatternFill(start_color="FFCCCC", end_color="FFCCCC", fill_type="solid")

        # Dictionary to store the highest "MaxMemoryUsedIn (%)" for each "Caption"
        caption_memory = {}

        # Iterate through the rows to collect "Caption" and "MaxMemoryUsedIn (%)" data
        for row in sheet.iter_rows(min_row=2, max_row=sheet.max_row, min_col=1, max_col=2):
            caption = row[0].value  # "Caption" column
            memory_used = row[1].value  # "MaxMemoryUsedIn (%)" column
            
            if caption is not None and isinstance(memory_used, (int, float)):
                if caption not in caption_memory or memory_used > caption_memory[caption]['value']:
                    caption_memory[caption] = {'value': memory_used, 'row': row[1].row}

        # Highlight the highest "MaxMemoryUsedIn (%)" for each unique "Caption"
        for data in caption_memory.values():
            cell = sheet.cell(row=data['row'], column=2)  # Get the cell of the highest value
            cell.fill = highlight_fill  # Apply the light red fill

        # Save the modified Excel file
        new_file_path = file_path.replace(".xlsx", "_highlighted.xlsx")
        wb.save(new_file_path)

        messagebox.showinfo("Success", f"The file has been processed and saved as {new_file_path}.")
    
    except Exception as e:
        messagebox.showerror("Error", f"An error occurred: {e}")

# Function to open the file dialog and process the selected Excel file
def open_file_dialog():
    file_path = filedialog.askopenfilename(filetypes=[("Excel files", "*.xlsx")])
    if file_path:
        highlight_highest_number(file_path)

# Create a simple GUI window
root = tk.Tk()
root.title("Highlight Highest Value in Excel")
root.geometry("400x200")

# Label and button for file selection
label = tk.Label(root, text="Select an Excel file to highlight the highest values:")
label.pack(pady=20)

button = tk.Button(root, text="Select File", command=open_file_dialog)
button.pack(pady=20)

# Run the GUI
root.mainloop()
