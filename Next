import tkinter as tk
from tkinter import filedialog, messagebox, ttk
import win32com.client
import time
import os

def browse_file():
    filepath = filedialog.askopenfilename(
        filetypes=[("PowerPoint Files", "*.pptx")]
    )
    entry_file_path.delete(0, tk.END)
    entry_file_path.insert(0, filepath)

def update_embedded_excel(ppt_file, data_sets):
    try:
        # Initialize PowerPoint and Excel applications
        powerpoint = win32com.client.Dispatch("PowerPoint.Application")
        presentation = powerpoint.Presentations.Open(os.path.abspath(ppt_file), ReadOnly=False)
        excel_app = win32com.client.Dispatch("Excel.Application")
        excel_app.Visible = False  # Ensure Excel is not visible

        data_index = 0  # Index for the current data set

        # Iterate through all slides and shapes
        for slide in presentation.Slides:
            if data_index >= len(data_sets):
                break  # Stop if all data sets have been applied

            for shape in slide.Shapes:
                if shape.HasChart:
                    chart = shape.Chart
                    chart.ChartData.Activate()

                    # Access embedded Excel
                    chart_data = chart.ChartData
                    workbook = chart_data.Workbook
                    worksheet = workbook.Worksheets(1)

                    # Update values in the embedded Excel
                    data_lines = data_sets[data_index]
                    for i, row_data in enumerate(data_lines):
                        if i < 3:  # Update only rows 2 to 4
                            # Update row values and apply color conditions
                            for j in range(4):  # Update only columns 1 to 4
                                value = row_data[j]
                                cell = worksheet.Cells(i + 2, j + 1)  # Adjust for proper row/column indexing
                                cell.Value = value
                                if j > 0:  # Columns 2 to 4
                                    try:
                                        percentage_value = float(value.strip('%'))
                                        if percentage_value > 85:
                                            cell.Font.Color = -16776961  # Red color
                                            worksheet.Cells(i + 2, 1).Font.Color = -16776961  # Column 1 red if any in 2-4 is >85%
                                        if j == 3 and (percentage_value < 85 or not value.endswith('%')):  # Column 4 condition for <85% or not a percentage
                                            cell.Font.Color = 65535  # Yellow color
                                    except ValueError:
                                        if j == 3:  # If not a valid percentage value in column 4
                                            cell.Font.Color = 65535  # Yellow color

                    # Force recalculation and simulate user interactions
                    workbook.Application.CalculateFull()  # Force full recalculation
                    time.sleep(2)  # Allow time for recalculation and updates

                    # Close the workbook without saving
                    workbook.Close(SaveChanges=False)
                    time.sleep(1)  # Allow time for the close operation

                    # Continue with the next data set
                    data_index += 1
                    break  # Move to the next slide after modifying the chart

        # Keep PowerPoint open
        # powerpoint.Quit()  # Uncomment if you want to close PowerPoint automatically

        messagebox.showinfo("Success", "Excel values updated and colors applied successfully for all charts.")

    except Exception as e:
        messagebox.showerror("Error", f"An error occurred while updating chart data: {e}")

def apply_excel_replacements():
    ppt_file = entry_file_path.get()
    if not ppt_file:
        messagebox.showerror("Error", "Please select a PowerPoint file.")
        return

    try:
        # Get data from the text field
        data_lines = entry_excel.get("1.0", tk.END).strip().splitlines()
        if len(data_lines) == 0:
            messagebox.showerror("Error", "No data provided.")
            return
        
        input_data = []
        temp_data = []
        for line in data_lines:
            line = line.strip()
            if line:
                temp_data.append(line.split())
                if len(temp_data) == 3:
                    input_data.append(temp_data)
                    temp_data = []
        
        if len(temp_data) > 0:
            messagebox.showerror("Error", "Each data set must contain exactly 3 lines.")
            return
        
        if len(input_data) == 0:
            messagebox.showerror("Error", "No valid data sets found.")
            return

        # Update Excel data in PowerPoint
        update_embedded_excel(ppt_file, input_data)

    except Exception as e:
        messagebox.showerror("Error", f"An error occurred: {e}")

# Set up the main window
root = tk.Tk()
root.title("Update Embedded Excel in PowerPoint")

# Set up the notebook (tabs)
notebook = ttk.Notebook(root)
notebook.grid(row=0, column=0, padx=10, pady=10)

# Tab for Excel replacements
tab_excel = ttk.Frame(notebook)
notebook.add(tab_excel, text="Excel Replacements")

# File selection
tk.Label(tab_excel, text="Select PowerPoint File:").grid(row=0, column=0, padx=10, pady=5)
entry_file_path = tk.Entry(tab_excel, width=50)
entry_file_path.grid(row=0, column=1, padx=10, pady=5)
tk.Button(tab_excel, text="Browse", command=browse_file).grid(row=0, column=2, padx=10, pady=5)

# Input area for Excel replacements
tk.Label(tab_excel, text="Enter Excel Table Data (3 lines per set, no blank lines between sets):").grid(row=1, column=0, padx=10, pady=5)
entry_excel = tk.Text(tab_excel, width=50, height=15)
entry_excel.grid(row=1, column=1, padx=10, pady=5)

# Apply replacements button
tk.Button(root, text="Apply Excel Replacements", command=apply_excel_replacements).grid(row=2, column=0, padx=10, pady=20)

# Start the Tkinter main loop
root.mainloop()
